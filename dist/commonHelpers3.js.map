{"version":3,"file":"commonHelpers3.js","sources":["../src/js/exercises.js","../src/js/footer.js","../src/js/up-btn.js"],"sourcesContent":["import star from '../images/svg/icon-star.svg';\nimport arrow from '../images/svg/icon-arrow.svg';\nimport man from '../images/svg/icon-man.svg';\nimport { filterExercises, getExercisesCards } from './api';\nimport { renderExercise } from './modal';\n\nconst btnFilterList = document.querySelector('.btn-wrapper');\nconst exList = document.querySelector('.exercises-list');\nconst exPagination = document.querySelector('.exercises-pagination');\nconst exSearchForm = document.querySelector('.exercises-form');\nlet span = document.querySelector('.span');\n\n\nbtnFilterList.addEventListener('change', () => renderTypeOfExercises(1));\n\n// render types of exercises\n\nrenderTypeOfExercises(1);\n\nasync function renderTypeOfExercises(currentPage) {\n\n  const defaultFilter = 'Muscles'\n\n  // hide search bar\n  exSearchForm.classList.add(\"visually-hidden\");\n\n\n  const currentFilterInput = btnFilterList.querySelector('input:checked');\n  const currentFilter = currentFilterInput ? currentFilterInput.value : defaultFilter;\n\n  // name\n  span.textContent = `/ ${currentFilter.toLowerCase()}`;\n\n  const { results, page, totalPages } = (await filterExercises(currentFilter, currentPage ?? 1)).data;\n\n  exList.innerHTML = results\n    .map(\n      ({ name, filter, imgUrl }) => `<li\n            class=\"exercises-item\"\n            style=\"\n            background:linear-gradient(0deg, rgba(16, 16, 16, 0.70) 0%, rgba(16, 16, 16, 0.70) 100%), url(${imgUrl});\n            background-size: cover;\n            background-repeat: no-repeat;\n            \"\n            data-name = \"${name}\"\n            data-filter = \"${filter.toLowerCase().split(' ').join('')}\"\n          >\n            <p class=\"exercises-name\">${name}</p>\n            <p class=\"exercises-text\">${filter}</p>\n          </li>`\n    )\n    .join('');\n\n  // pagination\n  renderPagBtn(totalPages, page);\n  exPagination.removeEventListener('change', handlePaginationTypesChange);\n  exPagination.removeEventListener('change', handlePaginationExercisesChange);\n  exPagination.removeEventListener('change', handlePaginationExercisesSearchChange);\n  exSearchForm.removeEventListener('submit', search);\n  exPagination.addEventListener('change', handlePaginationTypesChange);\n\n  exList.addEventListener('click', renderExercises);\n}\n\nfunction handlePaginationTypesChange(event) {\n  renderTypeOfExercises(event.target.value);\n}\n\n// exercises\n\nasync function renderExercises(event) {\n\n  if (event.target?.tagName == \"UL\") {\n    return\n  }\n\n  exList.removeEventListener('click', renderExercises);\n  exPagination.removeEventListener('change', handlePaginationTypesChange);\n  btnFilterList.reset();\n\n  // show search bar\n  exSearchForm.classList.remove(\"visually-hidden\");\n\n  if (typeof event !== \"string\") {\n    const item = event.target.closest('.exercises-item');\n    span.textContent += ` / ${item.dataset.name}`\n  }\n\n  const params = span.textContent.split(\"/\");\n\n\n  let filter = params[1].trim();\n  if (filter === 'body parts') {\n    filter = 'bodypart';\n  }\n\n  const name = params[2].trim();\n\n  const currentPage = typeof event === \"string\" ? event : 1;\n\n  const { results, totalPages, page } = (await getExercisesCards(filter, name, currentPage)).data;\n\n  exList.innerHTML = results\n    .map(\n      ({ name, rating, burnedCalories, target, bodyPart, time, _id }) => `<li\n          class=\"workout-item\">\n          <div class=\"workout-card\">\n      <div class=\"workout-header\">\n          <div class=\"workout-header-wrapper\">\n            <p class=\"workout-title\">workout</p>\n            <p class=\"workout-rating\">${rating}</p>\n            <img\n            class=\"workout-rating-icon\"\n              src=\"${star}\" />\n          </div>\n          <button\n            class=\"workout-start-button\"\n            data-id=\"${_id}\"\n            type=\"button\"\n          >\n            Start\n             <img\n              class=\"workout-icon-start\"\n             src=\"${arrow}\" />\n          </button>\n        </div>\n        <div class=\"workout-name-wrapper\">\n           <img\n            class=\"workout-icon-man\"\n            src=\"${man}\" />\n          <p class=\"workout-name\">${name}</p>\n        </div>\n\n        <div class=\"workout-inform-wrapper\">\n\n        <p class=\"workout-calories\">\n            Burned calories:\n            <span class=\"number-calories\">${burnedCalories} / ${time} min</span>\n          </p>\n\n        <p class=\"workout-body-part\">\n            Body part:\n            <span class=\"body-part\">${bodyPart}</span>\n          </p>\n\n          <p class=\"workout-target\">\n            Target: <span class=\"target\">${target}</span>\n          </p>\n\n          </div>\n          </div>\n</li>`\n    )\n    .join('');\n\n  exSearchForm.addEventListener('submit', search);\n  exList.addEventListener('click', openModal)\n\n  // pagination \n  renderPagBtn(totalPages, page);\n  exPagination.removeEventListener('change', handlePaginationExercisesChange);\n  exPagination.addEventListener('change', handlePaginationExercisesChange);\n}\n\nfunction handlePaginationExercisesChange(event) {\n  renderExercises(event.target.value);\n}\n\n// search\n\nasync function search(event) {\n  if (typeof event !== \"string\") {\n    event.preventDefault();\n  }\n\n\n  const keyword = typeof event === 'string' ? exList.querySelector('.workout-item').dataset.keyword : event.target.search.value;\n\n  const params = span.textContent.split(\"/\");\n\n  let filter = params[1].trim();\n  if (filter === 'body parts') {\n    filter = 'bodypart';\n  }\n\n  const name = params[2].trim();\n\n  const currentPage = typeof event === \"string\" ? event : 1;\n\n  const { results, totalPages, page } = (await getExercisesCards(filter, name, currentPage, keyword)).data;\n\n  if (results.length === 0) {\n    exList.innerHTML = `\n      <li class=\"workout-item-no-results\">\n  <p class=\"workout-no-results\">\n    Unfortunately, <span class=\"workout-no-results-span\">no results</span> were found. You may want to consider other\n    search options to find the exercise you are looking\n    for. Our range is wide and you have the opportunity to find more options that suit your needs.\n  </p>\n</li>`\n    exPagination.classList.add('visually-hidden');\n    exSearchForm.reset();\n    return\n  }\n\n  exPagination.classList.remove('visually-hidden');\n\n  exList.innerHTML = results\n    .map(\n      ({ name, rating, burnedCalories, target, bodyPart, time, _id }) => `<li\n      data-keyword=\"${keyword}\"\n          class=\"workout-item\">\n          <div class=\"workout-card\">\n      <div class=\"workout-header\">\n          <div class=\"workout-header-wrapper\">\n            <p class=\"workout-title\">workout</p>\n            <p class=\"workout-rating\">${rating}</p>\n            <img\n            class=\"workout-rating-icon\"\n              src=\"${star}\" />\n          </div>\n          <button\n            class=\"workout-start-button\"\n            data-id=\"${_id}\"\n            type=\"button\"\n          >\n            Start\n             <img\n              class=\"workout-icon-start\"\n             src=\"${arrow}\" />\n          </button>\n        </div>\n        <div class=\"workout-name-wrapper\">\n           <img\n            class=\"workout-icon-man\"\n            src=\"${man}\" />\n          <p class=\"workout-name\">${name}</p>\n        </div>\n\n        <div class=\"workout-inform-wrapper\">\n\n        <p class=\"workout-calories\">\n            Burned calories:\n            <span class=\"number-calories\">${burnedCalories} / ${time} min</span>\n          </p>\n\n        <p class=\"workout-body-part\">\n            Body part:\n            <span class=\"body-part\">${bodyPart}</span>\n          </p>\n\n          <p class=\"workout-target\">\n            Target: <span class=\"target\">${target}</span>\n          </p>\n\n          </div>\n          </div>\n</li>`\n    )\n    .join('');\n\n\n  exSearchForm.reset();\n\n  // pagination \n  renderPagBtn(totalPages, page);\n  exPagination.removeEventListener('change', handlePaginationExercisesChange);\n  exPagination.addEventListener('change', handlePaginationExercisesSearchChange);\n}\n\nfunction handlePaginationExercisesSearchChange(event) {\n  search(event.target.value);\n}\n\n// open modal \n\nfunction openModal(event) {\n  let btn = event.target;\n\n  if (btn.tagName !== \"BUTTON\" && btn.tagName !== \"IMG\") {\n    return\n  }\n\n  if (btn.tagName === \"IMG\") {\n    if (btn.classList.value !== 'workout-icon-start') return\n    btn = btn.closest('.workout-start-button');\n  }\n\n  const id = btn.dataset.id\n\n  renderExercise(id)\n}\n\n// pagination\nfunction renderPagBtn(totalPages, page) {\n  let buttons;\n\n  if (totalPages > 5) {\n    if (page === 1 || page === 2 || page === 3) {\n      buttons = [1, 2, 3, 4, 5];\n    } else if (totalPages - page < 2) {\n      buttons = [totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages];\n    }\n    else {\n      buttons = [page - 2, page - 1, page, page + 1, page + 2]\n    }\n    buttons = buttons.map(\n      (num) =>\n        `<label class=\"exercises-pagination-btn\">\n  ${num}\n<input class=\"visually-hidden\" type=\"radio\" value=\"${num}\" name=\"pagination\"  ${num === Number(page) ? 'checked' : \"\"}>\n</label>`\n    )\n      .join('');\n\n  } else {\n    buttons = Array(totalPages)\n      .fill()\n      .map(\n        (_, idx) =>\n          `<label class=\"exercises-pagination-btn\">\n  ${idx + 1}\n<input class=\"visually-hidden\" type=\"radio\" value=\"${idx + 1}\" name=\"pagination\" ${idx + 1 === Number(page) ? 'checked' : \"\"}>\n</label>`\n      )\n      .join('');\n  }\n\n  exPagination.innerHTML = '';\n  exPagination.insertAdjacentHTML('beforeend', buttons);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const btnFilterList = document.querySelector('.btn-wrapper');\n// const exList = document.querySelector('.exercises-list');\n// const exPagination = document.querySelector('.exercises-pagination');\n// const exFilterBtn = document.querySelectorAll('.exercises-btn-filter');\n// const exForm = document.querySelector('.exercises-form');\n// let span = document.querySelector('.span');\n// const secondSpan = document.querySelector('.second-span');\n// const exHeader = document.querySelector('.exercises-header');\n// let query = 'Muscles';\n\n// let allPages = 0;\n\n// filterExercises(query).then(({ data: { results, totalPages, page } }) => {\n//   exFilterBtn[0].classList.add('is-active');\n\n//   exList.insertAdjacentHTML('beforeend', renderFilterItems(results));\n//   renderPagBtn(totalPages, page);\n// });\n\n// btnFilterList.addEventListener('click', onFiltersBtnClick);\n\n// function onFiltersBtnClick(e) {\n//   span.classList.add('visually-hidden');\n//   const button = e.target;\n//   if (button.nodeName !== 'BUTTON') {\n//     return;\n//   }\n//   const activeFilterBtn = document.querySelector('.is-active');\n//   if (activeFilterBtn) {\n//     activeFilterBtn.classList.remove('is-active');\n//   }\n\n//   if (innerWidth >= 768 && innerWidth < 1440) {\n//     exHeader.style.marginBottom = '32px';\n//   }\n\n//   button.classList.add('is-active');\n//   query = button.textContent;\n//   exList.addEventListener('click', onCardClick);\n//   filterExercises(query).then(({ data: { results, totalPages, page } }) => {\n\n//     exList.innerHTML = '';\n//     exList.insertAdjacentHTML('beforeend', renderFilterItems(results));\n\n\n\n//     exForm.classList.add('visually-hidden');\n//     renderPagBtn(totalPages, page);\n//     exPagination.classList.remove('visually-hidden');\n//   });\n// }\n\n// exList.addEventListener('click', onCardClick);\n\n// function onCardClick(e) {\n//   if (e.target.nodeName != 'UL') {\n//     let exSubtype = e.target.closest('li').dataset.name;\n//     let exFilter = e.target.closest('li').dataset.filter;\n\n//     if (exFilter === 'bodyparts') {\n//       exFilter = 'bodypart';\n//     }\n\n//     if (e.target.nodeName === 'UL') {\n//       return;\n//     }\n\n//     exForm.classList.remove('visually-hidden');\n//     span.classList.remove('visually-hidden');\n//     secondSpan.textContent = exSubtype;\n\n//     exList.innerHTML = '';\n//     exPagination.innerHTML = '';\n\n//     getExercisesCards(exFilter, exSubtype).then(\n//       ({ data: { results, totalPages, page } }) => {\n//         exList.insertAdjacentHTML('beforeend', renderCards(results));\n\n//         const startBtn = document.querySelectorAll('.workout-start-button');\n//         startBtn.forEach(btn =>\n//           btn.addEventListener('click', () => {\n//             renderExercise(btn.dataset.id);\n//           })\n//         );\n\n//         renderPagBtn(totalPages, page);\n\n//         exPagination.removeEventListener('click', onPagFilterBtnClick);\n//         exPagination.addEventListener('click', onPagExBtnClick);\n\n//         allPages = totalPages;\n\n//         exPagination.firstChild.classList.add('active-pag-btn');\n//         exList.removeEventListener('click', onCardClick);\n//       }\n\n//     );\n\n//     if (innerWidth >= 768 && innerWidth < 1440) {\n//       exHeader.style.marginBottom = '55px';\n//     }\n//   }\n// }\n\n// function onPagExBtnClick(e) {\n//   let page = e.target.textContent;\n\n//   if (e.target.nodeName !== 'BUTTON') {\n//     return;\n//   }\n//   const activePagBtn = document.querySelector('.active-pag-btn');\n//   if (activePagBtn) {\n//     activePagBtn.classList.remove('active-pag-btn');\n//   }\n//   e.target.classList.add('active-pag-btn');\n//   const keyword = exForm.querySelector('input').value.trim();\n\n//   nextPage(allPages, page);\n//   getExercisesCards(query.toLowerCase(), secondSpan.textContent, page, keyword).then(res => {\n//     exList.innerHTML = '';\n//     exList.insertAdjacentHTML('beforeend', renderCards(res.data.results));\n\n//     const startBtn = document.querySelectorAll('.workout-start-button');\n//     startBtn.forEach(btn =>\n//       btn.addEventListener('click', () => {\n//         renderExercise(btn.dataset.id);\n//       })\n//     );\n//   });\n// }\n\n// function onPagFilterBtnClick(e) {\n//   let page = e.target.textContent;\n\n//   if (e.target.nodeName !== 'BUTTON') {\n//     return;\n//   }\n//   const activePagBtn = document.querySelector('.active-pag-btn');\n//   if (activePagBtn) {\n//     activePagBtn.classList.remove('active-pag-btn');\n//   }\n//   e.target.classList.add('active-pag-btn');\n\n//   filterExercises(query, page).then(res => {\n\n//     exList.innerHTML = '';\n//     exList.insertAdjacentHTML('beforeend', renderFilterItems(res.data.results));\n//   });\n// }\n\n// function renderFilterItems(data) {\n//   exPagination.addEventListener('click', onPagFilterBtnClick);\n//   return data\n//     .sort((a, b) => a.name.localeCompare(b.name))\n//     .map(\n//       ({ name, filter, imgUrl }) => `<li\n//           class=\"exercises-item\"\n//           style=\"\n//           background:linear-gradient(0deg, rgba(16, 16, 16, 0.70) 0%, rgba(16, 16, 16, 0.70) 100%), url(${imgUrl});\n//           background-size: cover;\n//   background-repeat: no-repeat;\n//           \"\n//           data-name = \"${name}\"\n//           data-filter = \"${filter.toLowerCase().split(' ').join('')}\"\n//         >\n\n//           <p class=\"exercises-name\" >${name}</p>\n//           <p class=\"exercises-text\" >${filter}</p>\n\n//         </li>`\n//     )\n//     .join('');\n// }\n\n// function nextPage(totalPages, page) {\n//   const maxDisplayedPages = 5;\n\n//   let startIdx = Math.max(1, page - Math.floor(maxDisplayedPages / 2));\n//   let endIdx = Math.min(startIdx + maxDisplayedPages - 1, totalPages);\n\n//   if (endIdx - startIdx + 1 < maxDisplayedPages) {\n//     startIdx = Math.max(1, endIdx - maxDisplayedPages + 1);\n//   }\n\n//   const buttonsPage = Array.from({ length: endIdx - startIdx + 1 }, (_, idx) => {\n//     const pageNum = startIdx + idx;\n\n//     return pageNum === Number(page)\n//       ? `<button class=\"exercises-pagination-btn active-pag-btn\" type=\"button\">${pageNum}</button>`\n//       : `<button class=\"exercises-pagination-btn\" type=\"button\">${pageNum}</button>`;\n//   }).join('');\n\n//   exPagination.innerHTML = '';\n//   exPagination.insertAdjacentHTML('beforeend', buttonsPage);\n// }\n\n\n// function renderPagBtn(totalPages, page) {\n//   let buttons = ''\n\n//   if (totalPages > 5) {\n//     buttons = [page - 2, page - 1, page, page + 1, page + 2]\n//       .fill(page, 3, 4)\n//       .map(\n//         (_, idx) =>\n//           `<button class = \"exercises-pagination-btn\" type = \"button\">${idx + 1\n//           }</button>`\n//       )\n//       .join('');\n\n//   } else {\n//     buttons = Array(totalPages)\n//       .fill()\n//       .map(\n//         (_, idx) =>\n//           `<button class = \"exercises-pagination-btn\" type = \"button\">${idx + 1\n//           }</button>`\n//       )\n//       .join('');\n//   }\n\n//   exPagination.innerHTML = '';\n//   exPagination.insertAdjacentHTML('beforeend', buttons);\n//   const checkActive = Array.from(exPagination.querySelectorAll('.exercises-pagination-btn')).some(\n//     (elem) => elem.classList.contains('active-pag-btn'));\n\n//   if (!checkActive) {\n//     exPagination.firstChild.classList.add('active-pag-btn');\n//   }\n// }\n\n// function renderCards(card) {\n//   return card\n//     .map(\n//       ({ name, rating, burnedCalories, target, bodyPart, time, _id }) => `<li\n//           class=\"workout-item\">\n//           <div class=\"workout-card\">\n//       <div class=\"workout-header\">\n//           <div class=\"workout-header-wrapper\">\n//             <p class=\"workout-title\">workout</p>\n//             <p class=\"workout-rating\">${rating}</p>\n//             <img\n//             class=\"workout-rating-icon\"\n//               src=\"${star}\" />\n//           </div>\n//           <button\n//             class=\"workout-start-button\"\n//             data-id = \"${_id}\"\n//             type=\"button\"\n//           >\n//             Start\n//              <img\n//               class=\"workout-icon-start\"\n//              src=\"${arrow}\" />\n//           </button>\n//         </div>\n//         <div class=\"workout-name-wrapper\">\n//            <img\n//             class=\"workout-icon-man\"\n//             src=\"${man}\" />\n//           <p class=\"workout-name\">${name}</p>\n//         </div>\n\n//         <div class=\"workout-inform-wrapper\">\n\n//         <p class=\"workout-calories\">\n//             Burned calories:\n//             <span class=\"number-calories\">${burnedCalories} / ${time} min</span>\n//           </p>\n\n//         <p class=\"workout-body-part\">\n//             Body part:\n//             <span class=\"body-part\">${bodyPart}</span>\n//           </p>\n\n//           <p class=\"workout-target\">\n//             Target: <span class=\"target\">${target}</span>\n//           </p>\n\n//           </div>\n//           </div>\n// </li>\n//       `\n//     )\n//     .join('');\n// }\n\n// // пошук //\n\n// function getFilterAndSubtypeInfo(filter, name, page, keyword) {\n//   getExercisesCards(filter, name, page, keyword).then(response => {\n\n//     if (String(response.data.results) === '') {\n//       exList.innerHTML = `\n//       <li class=\"workout-item-no-results\">\n//   <p class=\"workout-no-results\">\n//     Unfortunately, <span class=\"workout-no-results-span\">no results</span> were found. You may want to consider other\n//     search options to find the exercise you are looking\n//     for. Our range is wide and you have the opportunity to find more options that suit your needs.\n//   </p>\n// </li>`\n//       exPagination.classList.add('visually-hidden');\n//     } else {\n//       exPagination.classList.remove('visually-hidden');\n//       exList.innerHTML = '';\n//       exList.insertAdjacentHTML('beforeend', renderCards(response.data.results));\n//       exList.addEventListener('click', (event) => {\n//         if (event.target.closest('.workout-start-button')) {\n//           renderExercise(event.target.closest('.workout-start-button').dataset.id);\n//         }\n//       });\n//     }\n//   });\n// }\n\n// function onexFormSubmit(e) {\n//   e.preventDefault();\n\n//   let filter = document.querySelector('.exercises-btn-filter.is-active').textContent.toLocaleLowerCase();\n\n//   if (filter === \"body parts\") {\n//     filter = 'bodypart';\n//   }\n\n\n//   const nowPage = document.querySelector('.exercises-pagination-btn.active-pag-btn').textContent;\n//   const keyword = exForm.querySelector('input').value.trim();\n\n//   getFilterAndSubtypeInfo(filter, secondSpan.textContent.toLowerCase(), nowPage, keyword);\n//   exForm.reset();\n// }\n\n// exForm.addEventListener('submit', onexFormSubmit);\n","import 'izitoast/dist/css/iziToast.min.css';\nimport iziToast from 'izitoast';\n\nconst form = document.querySelector('.footer-form');\nconst emailInput = document.querySelector('.footer-form-input');\n\nconst emailPattern = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n\nform.addEventListener('submit', async function (e) {\n  e.preventDefault();\n\n  const email = emailInput.value.trim();\n\n  if (!emailPattern.test(email)) {\n    showError('Invalid email address');\n    form.reset();\n    return;\n  }\n  try {\n    const subscribe = await fetch(\n      'https://energyflow.b.goit.study/api/subscription',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      }\n    );\n\n    if (subscribe.ok) {\n      form.reset();\n      showSend();\n    } else {\n      showSubscribed();\n    }\n  } catch (error) {\n    showError();\n  } finally {\n    form.reset();\n  }\n});\n\nfunction showSend() {\n  iziToast.info({\n    title: 'Info',\n    position: 'center',\n    message:\n      \"We're excited to have you on board! 🎉 Thank you for subscribing to new exercises on Energy Flow. You've just taken a significant step towards improving your fitness and well-being.\",\n  });\n}\n\nfunction showError() {\n  iziToast.error({\n    title: 'Error',\n    position: 'center',\n    message:\n      'Sorry, there was an error sending your address. Please try again!',\n  });\n}\n\nfunction showSubscribed() {\n  iziToast.info({\n    title: 'Info',\n    position: 'center',\n    message: 'Its okay, you are already subscribed : ) ',\n  });\n}\n","const upBtnContainer = document.querySelector(\".scroll-container\");\nconst upBtn = document.querySelector(\".scroll-btn\");\n\naddEventListener('scroll', checkScrolling, { once: true });\nupBtn.addEventListener('click', scrollUp);\n\nfunction checkScrolling() {\n    if (window.scrollY > 0) {\n        upBtnContainer.style.transform = 'translateY(0)';\n    } else {\n        if (window.innerWidth < 768) {\n            upBtnContainer.style.transform = 'translateY(60px)';\n        } else {\n            upBtnContainer.style.transform = 'translateY(120px)';\n        }\n    }\n}\n\nfunction scrollUp() {\n    window.scroll({\n        top: 0,\n        behavior: 'smooth',\n    });\n\n    if (window.innerWidth < 768) {\n        upBtnContainer.style.transform = 'translateY(60px)';\n    } else {\n        upBtnContainer.style.transform = 'translateY(120px)';\n    }\n\n    removeEventListener('scroll', checkScrolling);\n\n    setTimeout(() => {\n        addEventListener('scroll', checkScrolling, { once: true });\n    }, 1000);\n}"],"names":["btnFilterList","exList","exPagination","exSearchForm","span","renderTypeOfExercises","currentPage","defaultFilter","currentFilterInput","currentFilter","results","page","totalPages","filterExercises","name","filter","imgUrl","renderPagBtn","handlePaginationTypesChange","handlePaginationExercisesChange","handlePaginationExercisesSearchChange","search","renderExercises","event","_a","item","params","getExercisesCards","rating","burnedCalories","target","bodyPart","time","_id","star","arrow","man","openModal","keyword","btn","id","renderExercise","buttons","num","_","idx","form","emailInput","emailPattern","email","showError","showSend","showSubscribed","iziToast","upBtnContainer","upBtn","checkScrolling","scrollUp"],"mappings":"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"}